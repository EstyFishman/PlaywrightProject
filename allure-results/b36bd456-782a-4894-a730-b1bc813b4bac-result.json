{"name": "test_locked_out_user[chromium]", "status": "broken", "statusDetails": {"message": "ValueError: Unsupported type: <class 'str'>", "trace": "login_page = <pages.login_page.LoginPage object at 0x00000187B5B76270>, page = <Page url='https://www.saucedemo.com/inventory.html'>\n\n    def test_locked_out_user(login_page, page) -> None:\n        login_page.navigate_to()\n        login_page.expect_login_credentials_visible()\n        login_page.type_username(\"standard_user\")\n        login_page.fill_password(\"secret_sauce\")\n        login_page.click_login_button()\n>       login_page.expect_login_successful()\n\ntests\\ui\\test_login_successful.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_page.py:41: in expect_login_successful\n    expect(self.__page.url).to_have_url(url)\n    ^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright.sync_api.Expect object at 0x00000187B4D773B0>, actual = 'https://www.saucedemo.com/inventory.html', message = None\n\n    def __call__(\n        self, actual: Union[Page, Locator, APIResponse], message: Optional[str] = None\n    ) -> Union[PageAssertions, LocatorAssertions, APIResponseAssertions]:\n        if isinstance(actual, Page):\n            return PageAssertions(\n                PageAssertionsImpl(actual._impl_obj, self._timeout, message=message)\n            )\n        elif isinstance(actual, Locator):\n            return LocatorAssertions(\n                LocatorAssertionsImpl(actual._impl_obj, self._timeout, message=message)\n            )\n        elif isinstance(actual, APIResponse):\n            return APIResponseAssertions(\n                APIResponseAssertionsImpl(\n                    actual._impl_obj, self._timeout, message=message\n                )\n            )\n>       raise ValueError(f\"Unsupported type: {type(actual)}\")\nE       ValueError: Unsupported type: <class 'str'>\n\n.venv\\Lib\\site-packages\\playwright\\sync_api\\__init__.py:143: ValueError"}, "steps": [{"name": "Navigating to url: https://www.saucedemo.com/", "status": "passed", "start": 1752510388540, "stop": 1752510391034}, {"name": "Expecting login credentials section to be visible", "status": "passed", "start": 1752510391035, "stop": 1752510391093}, {"name": "Typing 'standard_user' into username filed.", "status": "passed", "start": 1752510391093, "stop": 1752510393152}, {"name": "Typing 'secret_sauce' into password field.", "status": "passed", "start": 1752510393152, "stop": 1752510393697}, {"name": "Clicking login button.", "status": "passed", "start": 1752510393697, "stop": 1752510394337}, {"name": "Expecting url to be: 'https://www.saucedemo.com/inventory.html'.", "status": "broken", "statusDetails": {"message": "ValueError: Unsupported type: <class 'str'>\n", "trace": "  File \"C:\\Users\\1\\winnerit\\PlaywrightProject\\pages\\login_page.py\", line 41, in expect_login_successful\n    expect(self.__page.url).to_have_url(url)\n    ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\1\\winnerit\\PlaywrightProject\\.venv\\Lib\\site-packages\\playwright\\sync_api\\__init__.py\", line 143, in __call__\n    raise ValueError(f\"Unsupported type: {type(actual)}\")\n"}, "start": 1752510394337, "stop": 1752510394337}], "parameters": [{"name": "browser_name", "value": "'chromium'"}], "start": 1752510388540, "stop": 1752510394337, "uuid": "06a60ae4-22ff-45a0-85ba-559e9a91d15b", "historyId": "b5e72fd4c1fa25d8205643b92aee5345", "testCaseId": "52abeda9f7bd7ae75c7dec80ea03d212", "fullName": "tests.ui.test_login_successful#test_locked_out_user", "labels": [{"name": "parentSuite", "value": "tests.ui"}, {"name": "suite", "value": "test_login_successful"}, {"name": "host", "value": "DESKTOP-IQUC79O"}, {"name": "thread", "value": "3120-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.test_login_successful"}]}